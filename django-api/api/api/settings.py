"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""


#################################
DEBUG = True
#################################



from pathlib import Path
from decouple import config
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')
# MAPBOX_TOKEN = config('MAPBOX_TOKEN')
NASA_FIRMS_TOKEN = config('NASA_FIRMS_TOKEN')

# Add your domain(s) to ALLOWED_HOSTS
ALLOWED_HOSTS = ['incendioschile.online', 'sebastiantare.xyz', 'localhost', '127.0.0.1']

# Application definition

INSTALLED_APPS = [
    'django_crontab',
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'wildfiresapi',
    'rest_framework',
    'django_extensions',
    'corsheaders',
] 

# Add a cron job with args and log to file
CRONJOBS = [
    ('*/10 * * * *', 'wildfiresapi.cron_job.get_data', [f'{BASE_DIR}', f'{NASA_FIRMS_TOKEN}']),
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

CORS_ALLOWED_ORIGINS = [
    "https://incendioschile.online",
    "https://sebastiantare.xyz",
    "http://localhost:8000",
    "http://localhost:1234"
]


ROOT_URLCONF = "api.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "api.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    
    # "default": {
    #    "ENGINE": "django.db.backends.sqlite3",
    #    "NAME": BASE_DIR / "db.sqlite3",
    # }

    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'wildfiresDB',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'localhost'
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field
if not DEBUG:
    DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

    # Set SECURE_HSTS_SECONDS to a suitable value, for example, 31536000 seconds (1 year)
    SECURE_HSTS_SECONDS = 31536000

    # Optionally, you can also set the following to instruct browsers to include subdomains:
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True

    # Make sure to use HTTPS for all requests, not just the ones that are secure
    SECURE_HSTS_PRELOAD = True

    # The directive instructs browsers to upgrade all requests to HTTPS
    SECURE_SSL_REDIRECT = True

    SESSION_COOKIE_SECURE = True

    CSRF_COOKIE_SECURE = True
